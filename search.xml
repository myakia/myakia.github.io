<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>三种排序算法</title>
    <url>/2017/08/16/%E4%B8%89%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">quickSort = <span class="function">(<span class="params">array</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (array.length &lt;= <span class="number">1</span>) <span class="keyword">return</span> array</span><br><span class="line">  <span class="keyword">let</span> [pivot, ...rest] = array</span><br><span class="line">  <span class="keyword">let</span> small = rest.filter(<span class="function"><span class="params">i</span> =&gt;</span> i &lt;= pivot)</span><br><span class="line">  <span class="keyword">let</span> big = rest.filter(<span class="function"><span class="params">i</span> =&gt;</span> i &gt; pivot)</span><br><span class="line">  <span class="keyword">return</span> [...quickSort(small), pivot, ...quickSort(big)]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><ul>
<li>让数组中的当前项和后一项比较，如果当前项比后一项大，则两者交换位置，大的靠后</li>
<li>每循环完一轮，当前最大值放在末尾</li>
<li>需要比较length-1轮，5个值只需要把4个值放在最后</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> ary = [<span class="number">12</span>, <span class="number">7</span>, <span class="number">92</span>, <span class="number">113</span>, <span class="number">61</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bubble</span>(<span class="params">ary</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; ary.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; (ary.length - <span class="number">1</span> - i); j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (ary[j] &gt; ary[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                [ary[j], ary[j + <span class="number">1</span>]] = [ary[j + <span class="number">1</span>], ary[j]]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ary</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> ary = [<span class="number">12</span>, <span class="number">7</span>, <span class="number">92</span>, <span class="number">113</span>, <span class="number">61</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insert</span>(<span class="params">ary</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> handle = []</span><br><span class="line">    handle.push(ary[<span class="number">0</span>])    <span class="comment">// 先插入一个值，否则不会进入内循环</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; ary.length; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = handle.length - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (ary[i] &gt; handle[j]) &#123;</span><br><span class="line">                handle.splice(j + <span class="number">1</span>, <span class="number">0</span>, ary[i])</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (j == <span class="number">0</span>) handle.unshift(ary[i])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> handle</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> length = arr.length;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; length; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> temp = arr[i];</span><br><span class="line">    <span class="keyword">let</span> j = i;</span><br><span class="line">    <span class="keyword">for</span>(; j &gt; <span class="number">0</span>; j--) &#123;</span><br><span class="line">      <span class="keyword">if</span>(temp &gt;= arr[j-<span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="keyword">break</span>;      <span class="comment">// 当前考察的数大于前一个数，证明有序，退出循环</span></span><br><span class="line">      &#125;</span><br><span class="line">      arr[j] = arr[j-<span class="number">1</span>]; <span class="comment">// 将前一个数复制到后一个数上</span></span><br><span class="line">    &#125;</span><br><span class="line">    arr[j] = temp;  <span class="comment">// 找到考察的数应处于的位置</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// example</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">2</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">7</span>,<span class="number">10</span>,<span class="number">32</span>,<span class="number">90</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">10</span>]</span><br><span class="line"><span class="built_in">console</span>.log(insertSort(arr));</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>排序</tag>
      </tags>
  </entry>
  <entry>
    <title>第一篇文章</title>
    <url>/2017/06/11/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<p>今天开始记录前端技术。</p>
]]></content>
  </entry>
</search>
